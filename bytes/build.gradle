/*
 * Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE
 * file distributed with this work for additional information regarding copyright ownership. The ASF licenses this file
 * to You under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the
 * License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 */
plugins {
  id 'me.champeau.jmh' version '0.7.2'
}

description = 'Classes and utilities for working with byte arrays.'

dependencies {
  implementation 'org.connid:framework'
  implementation 'org.connid:framework-internal'
  compileOnly 'com.google.code.findbugs:jsr305'
  compileOnly 'com.google.errorprone:error_prone_annotations'
  api 'io.vertx:vertx-core'

  testImplementation 'io.vertx:vertx-core'
  testImplementation 'org.junit.jupiter:junit-jupiter-api'
  testImplementation 'org.junit.jupiter:junit-jupiter-params'
  testImplementation 'org.mockito:mockito-junit-jupiter'
  testImplementation 'tools.profiler:async-profiler:3.0'

  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

  jmhAnnotationProcessor 'org.openjdk.jmh:jmh-generator-annprocess:1.37'
}

// to pass compilation as the compiler doesn't like what jmh tool is doing
compileJmhJava {
    options.compilerArgs << '-Xlint:none'
}

jmh {
  jmhVersion = '1.37'
  if (project.hasProperty('jmh.includes')) {
    includes = [project.property('jmh.includes')]
  }
// def asyncProfiler = System.getenv("ASYNC_PROFILER")
// def timestamp = new Date().format("yyyyMMddHHmmss")
// def flamegraphFile = "/tmp/flamegraph-${timestamp}.html"

  jvmArgs = ['-XX:LoopUnrollLimit=1',
             '-XX:-TieredCompilation',
             '-XX:+UnlockDiagnosticVMOptions',
           //   '-XX:+TraceDeoptimization',
           //   '-XX:+PrintCompilation',
             // '-XX:+PrintInlining',
           //   '-XX:-Inline',
//	         "-agentpath:$asyncProfiler/lib/libasyncProfiler.dylib=start,collapsed,loglevel=TRACE,flamegraph,file=$flamegraphFile"
  ]
}
